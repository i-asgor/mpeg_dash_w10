<!doctype html>
<html>
    <head>
        <title>MASTER ACADEMY</title>
            <style>
            video {
                width: 640px;
                height: 360px;
            }
        </style>
        
    </head>
    <body>
        <div>
            <video id="videoPlayer"  type='video/mp4; application/dash+xml codecs="avc1.4D401E, mp4a.40.2"' controls autoplay></video>
        </div>

        <script src="/resources/dash.all.min.js"></script>
        <script>
            (function(){
                var url = "/temp/manifest.mpd";
                //var url = "http://localhost:8080/manifest.mpd";
                var player = dashjs.MediaPlayer().create();
                player.initialize(document.querySelector("#videoPlayer"), url, true);
            })();
        
        </script>   
       
    </body>
</html>        



         














            

        <!--  <script>

<script>
      var video = document.getElementById('video');
      if (Hls.isSupported()) {
        var hls = new Hls({
          debug: true,
        });
        hls.loadSource('https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8');
        hls.attachMedia(video);
        hls.on(Hls.Events.MEDIA_ATTACHED, function () {
          video.muted = true;
          video.play();
        });
      }
      // hls.js is not supported on platforms that do not have Media Source Extensions (MSE) enabled.
      // When the browser has built-in HLS support (check using `canPlayType`), we can provide an HLS manifest (i.e. .m3u8 URL) directly to the video element throught the `src` property.
      // This is using the built-in support of the plain video element, without using hls.js.
      else if (video.canPlayType('application/vnd.apple.mpegurl')) {
        video.src = 'https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8';
        video.addEventListener('canplay', function () {
          video.play();
        });
      }
    </script>






























        (function(){
        // var url = "https://dash.akamaized.net/envivio/EnvivioDash3/manifest.mpd";
        var url = "http://localhost:8080/manifest.mpd";
        var player = dashjs.MediaPlayer().create();
        // config
        targetLatency = 2.0;        // Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.
        minDrift = 0.05;            // Minimum latency deviation allowed before activating catch-up mechanism.
        catchupPlaybackRate = 0.5;  // Maximum catch-up rate, as a percentage, for low latency live streams.
        stableBuffer = 2;           // The time that the internal buffer target will be set to post startup/seeks (NOT top quality).
        bufferAtTopQuality = 2;     // The time that the internal buffer target will be set to once playing the top quality.

     player.updateSettings({
      'streaming': {
          'liveDelay': 2,
          'liveCatchUpMinDrift': 0.05,
          'liveCatchUpPlaybackRate': 0.5,
          'stableBufferTime': 2,
          'bufferTimeAtTopQuality': 2,
          'bufferTimeAtTopQualityLongForm': 2,
          'bufferToKeep': 2,
          'bufferAheadToKeep': 2,
          'lowLatencyEnabled': true,
          'fastSwitchEnabled': true,
          'abr': {
               'limitBitrateByPortal': true
          },
       }
   });

   console.log(player.getSettings());

   setInterval(() => {
      console.log('Live latency= ', player.getCurrentLiveLatency());
      console.log('Buffer length= ', player.getBufferLength('video'));
     }, 3000);

     player.initialize(document.querySelector("#videoPlayer"), url, true);

   })();
</script>-->   